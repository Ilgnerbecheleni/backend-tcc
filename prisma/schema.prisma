// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Usuarios {
  @@map("Usuarios")
  id                    String           @id @default(uuid())
  nome                  String  
  sub                   String           @unique
  photoUrl              String?
  classificacoesFeitas  Classificacao[]  @relation("ClassificacoesFeitas")
  classificacoesRecebidas Classificacao[] @relation("ClassificacoesRecebidas")
  trabalho              Trabalho[]
  createdAt             DateTime         @default(now())
  comentarios           Comentarios[]
}

model Classificacao {
  @@map("Classificacoes")
  id                    String    @id @default(uuid())
  classificacao         Int
  autorId               String
  autor                 Usuarios  @relation("ClassificacoesFeitas", fields: [autorId], references: [id], onDelete: Cascade)
  avaliadoId            String
  avaliado              Usuarios  @relation("ClassificacoesRecebidas", fields: [avaliadoId], references: [id], onDelete: Cascade)
}

model Comentarios{
    @@map("Comentarios")
    id String @id @default(uuid())
    comentario String
    userId String
    user Usuarios @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Trabalho {
  @@map("Trabalhos")
  id            String    @id @default(uuid())
  titulo        String 
  telefone      String
  localizacao   String
  valorHora     Float
  servicoId     String
  usuarioSub    String    // Altere de usuarioId para usuarioSub
  servico       Categoria @relation(fields: [servicoId], references: [id])
  usuario       Usuarios  @relation(fields: [usuarioSub], references: [sub], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}


model Categoria{
    @@map("Categoria")
    id          String     @id @default(uuid())
    NomeServico String
    trabalho  Trabalho[]
}







